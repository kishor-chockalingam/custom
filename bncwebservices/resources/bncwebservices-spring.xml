<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform

 Copyright (c) 2000-2013 hybris AG
 All rights reserved.

 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns:int="http://www.springframework.org/schema/integration"
		 xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
           http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-2.1.xsd">

	<!-- data setup -->
	<bean id="yCommerceWebServicesDataSetup" class="com.acc.setup.BncwebservicesDataSetup">
		<property name="importService" ref="importService"></property>
		<property name="solrIndexerService" ref="wsSetupSolrIndexerService"/>
		<property name="synchronizationService" ref="wsSetupSynchronizationService"/>
	</bean>

	<bean id="cwsProductFacade" parent="defaultProductFacade">
		<property name="productConfiguredPopulator" ref="cwsProductConfiguredPopulator"/>
		<property name="productConverter" ref="cwsProductConverter"/>
	</bean>

	<bean id="cwsProductConfiguredPopulator" parent="defaultProductConfiguredPopulator">
		<property name="populators">
			<map key-type="de.hybris.platform.commercefacades.product.ProductOption" merge="true">
				<entry key="GALLERY" value-ref="cwsProductGalleryPopulatorList"/>
			</map>
		</property>
	</bean>

	<bean id="cwsProductGalleryPopulatorList" parent="abstractPopulatorList">
		<property name="populators">
			<list>
				<ref bean="cwsProductGalleryImagesPopulator"/>
			</list>
		</property>
	</bean>

	<bean id="cwsImageFormatMapping" parent="defaultImageFormatMapping">
		<property name="mapping">
			<map>
				<entry key="superZoom" value="1200Wx1200H"/>
				<entry key="zoom" value="515Wx515H"/>
				<entry key="store" value="365Wx246H"/>
				<entry key="product" value="300Wx300H"/>
				<entry key="thumbnail" value="96Wx96H"/>
				<entry key="cartIcon" value="65Wx65H"/>
				<entry key="styleSwatch" value="30Wx30H"/>
			</map>
		</property>
	</bean>

	<bean id="cwsProductPrimaryImagePopulator" parent="defaultProductPrimaryImagePopulator">
		<property name="imageFormatMapping" ref="cwsImageFormatMapping"/>
		<property name="imageFormats">
			<list>
				<value>zoom</value>
				<value>product</value>
				<value>thumbnail</value>
				<value>cartIcon</value>
			</list>
		</property>
	</bean>

	<bean id="cwsProductGalleryImagesPopulator" parent="defaultProductGalleryImagesPopulator">
		<property name="imageFormatMapping" ref="cwsImageFormatMapping"/>
		<property name="imageFormats">
			<list>
				<value>zoom</value>
				<value>product</value>
				<value>thumbnail</value>
			</list>
		</property>
	</bean>

	<bean id="cwsProductPopulator"
			parent="defaultProductPopulator">
		<property name="productPrimaryImagePopulator" ref="cwsProductPrimaryImagePopulator"/>
		<property name="productModelUrlResolver" ref="bncwebservicesProductModelUrlResolver"/>
	</bean>

	<bean id="cwsProductConverter" parent="defaultProductConverter">
		<property name="populators">
			<list>
				<ref bean="cwsProductPopulator"/>
			</list>
		</property>
	</bean>

	<bean id="cwsCatalogFacade" parent="defaultCatalogFacade">
		<property name="catalogVersionPopulator" ref="cwsCatalogVersionPopulator"/>
		<property name="categoryHierarchyPopulator" ref="cwsCategoryHierarchyPopulator"/>
	</bean>

	<bean id="cwsCatalogVersionPopulator" parent="defaultCatalogVersionPopulator">
		<property name="categoryHierarchyPopulator" ref="cwsCategoryHierarchyPopulator"/>
		<property name="categoriesUrl" value="/categories"/>
	</bean>

	<bean id="cwsCategoryHierarchyPopulator" parent="defaultCategoryHierarchyPopulator">
		<property name="productConverter" ref="cwsProductConverter"/>
		<property name="categoryUrlResolver" ref="bncwebservicesCategoryModelUrlResolver"></property>
	</bean>

	<bean id="cwsProductExportFacade" parent="defaultProductExportFacade">
		<property name="productConverter" ref="cwsProductConverter"/>
		<property name="productCategoriesPopulator" ref="cwsProductCategoriesPopulator"/>
	</bean>

	<bean id="cwsProductCategoriesPopulator" parent="defaultProductCategoriesPopulator">
		<property name="categoryConverter" ref="cwsCategoryConverter"/>
	</bean>

	<bean id="cwsCategoryConverter" parent="defaultCategoryConverter">
		<lookup-method name="createTarget" bean="categoryData"/>
		<property name="populators">
			<list>
				<ref bean="cwsCategoryPopulator"/>
			</list>
		</property>
	</bean>

	<bean id="cwsCategoryPopulator" parent="defaultCategoryPopulator">
		<property name="categoryModelUrlResolver" ref="bncwebservicesCategoryModelUrlResolver"/>
	</bean>

	<bean id="bncwebservicesProductModelUrlResolver" parent="defaultProductModelUrlResolver">
		<property name="defaultPattern" value="/{baseSite-uid}/products/{product-code}"/>
	</bean>

	<bean id="bncwebservicesCategoryModelUrlResolver" parent="defaultCategoryModelUrlResolver">
		<property name="pattern" value="/{baseSite-uid}/catalogs/{catalog-id}/{catalogVersion}/categories/{category-code}"/>
	</bean>

	<!-- Populator for title name -->
	<alias name="defaultExtendedCustomerPopulator" alias="extendedCustomerPopulator"/>
	<bean id="defaultExtendedCustomerPopulator" class="com.acc.customer.populator.ExtendedCustomerPopulator"/>

	<bean parent="modifyPopulatorList">
    	<property name="list" ref="customerConverter"/>
    	<property name="add" ref="extendedCustomerPopulator"/>
	</bean>

	<!--Express Update Queue functionality-->

	<bean id="abstractExpressUpdateQueue"
			class="com.acc.expressupdate.impl.AbstractExpressUpdateQueue" abstract="true">
		<property name="maxCapacity" value="100000"/>
	</bean>

	<bean id="productExpressUpdateQueue"
			class="com.acc.expressupdate.impl.ProductExpressUpdateQueue"
			parent="abstractExpressUpdateQueue"/>

	<bean id="productExpressUpdateChannelListener"
			class="com.acc.expressupdate.channel.ProductExpressUpdateChannelListener">
		<property name="productExpressUpdateElementConverter" ref="productExpressUpdateElementConverter"/>
		<property name="productExpressUpdateQueue" ref="productExpressUpdateQueue"/>
	</bean>

	<int:service-activator input-channel="productExpressUpdateChannel"
								  ref="productExpressUpdateChannelListener"
								  method="onMessage"/>

	<bean id="productExpressUpdateElementData"
			class="com.acc.expressupdate.data.ProductExpressUpdateElementData" scope="prototype"/>

	<alias name="defaultProductExpressUpdateElementPopulator" alias="productExpressUpdateElementPopulator"/>
	<bean id="defaultProductExpressUpdateElementPopulator"
			class="com.acc.expressupdate.populators.ProductExpressUpdateElementPopulator"/>

	<alias name="defaultProductExpressUpdateElementConverter" alias="productExpressUpdateElementConverter"/>
	<bean id="defaultProductExpressUpdateElementConverter" parent="abstractPopulatingConverter">
		<lookup-method name="createTarget" bean="productExpressUpdateElementData"/>
		<property name="populators">
			<list>
				<ref bean="productExpressUpdateElementPopulator"/>
			</list>
		</property>
	</bean>

	<bean id="productExpressUpdateCleanerJob"
			class="com.acc.expressupdate.cronjob.ProductExpressUpdateCleanerJob"
			parent="abstractJobPerformable">
		<property name="productExpressUpdateQueue" ref="productExpressUpdateQueue"/>
	</bean>
	
	<!-- Old cart cleaner -->
	<bean id="oldCartRemovalJob" class="com.acc.cronjob.OldCartRemovalJob"  parent="abstractJobPerformable">
		<property name="commerceCartDao" ref="commerceCartDao"/>
		<property name="timeService" ref="timeService"/>
		<property name="userService" ref="userService"/>
  	</bean>


   	<!--Beans needed for sample data used in groovy tests  -->
   
   	<bean id="wsTestCategorySource" parent="abstractCategorySource">
		<property name="rootCategory" value="1"/>
		<!-- '1' is the root icecat category -->
	</bean>
	<bean id="wsTestBrandCategorySource" parent="abstractCategorySource">
		<property name="rootCategory" value="brands"/>
		<!-- 'brands' is the root of the brands hierarchy -->
	</bean>

	<bean id="wsTestCategoryCodeValueProvider" class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.CategoryCodeValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="categorySource" ref="wsTestCategorySource"/>
	</bean>
	
	<bean id="wsTestBrandCategoryCodeValueProvider" class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.CategoryCodeValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="categorySource" ref="wsTestBrandCategorySource"/>
	</bean>
	
	<bean id="wsTestCategoryNameValueProvider" class="de.hybris.platform.commerceservices.search.solrfacetsearch.provider.impl.CategoryNameValueProvider"
	      parent="abstractPropertyFieldValueProvider" >
		<property name="fieldNameProvider" ref="solrFieldNameProvider"/>
		<property name="commonI18NService" ref="commonI18NService"/>
		<property name="categorySource" ref="wsTestCategorySource"/>
	</bean>
	
	<bean id="wsSetupSolrIndexerService" class="com.acc.setup.SolrIndexerService">
		<property name="modelService" ref="modelService"/>
		<property name="cronJobService" ref="cronJobService"/>
  	</bean>

  	<bean id="wsSetupSynchronizationService" class="com.acc.setup.SynchronizationService">
		<property name="modelService" ref="modelService"/>
  	</bean>

	<bean id="wsTestPointOfServiceFacetDisplayNameProvider"
	      class="com.acc.search.solrfacetsearch.provider.impl.PointOfServiceFacetDisplayNameProvider">
		<property name="pointOfServiceService" ref="pointOfServiceService"/>
	</bean>
	<bean id="storeLoginService" class="com.acc.services.impl.StoreLoginServiceImpl">
		
	</bean>
	
  <!--End of beans needed for sample data used in groovy tests  -->
  
</beans>